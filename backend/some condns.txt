data validation
	login|adduser|signup - required
	((signup, add user) - username,		login) - email,pass

	update user - any
	add product - required
	update product - any



htttp codes
	https://stackoverflow.com/questions/2342579/http-status-code-for-update-and-delete
	https://kinsta.com/blog/http-status-codes/
	https://stackoverflow.com/questions/17884469/what-is-the-http-response-code-for-failed-http-delete-operation


rest client(not valid for multipart/formdata)
admin panel - cssinja, emotion + tailwind (only for designing, not for functionality)


testing products.js in rest client

for front-end
	home - redirect to website home html
	adminpanel/index - redirect to adminpanel home html
	profile/index - fns for admin/user profile, redirect from front-end only to profile home html


profile
common


tryCatch only used in case of async because in async we can't call global err middleware using 'throw' only, so we need to use tryCatch to throw and catch err and send err thru next(err)
so async = tryCatch
no async = no tryCatch


product consolidated rating =  (sum of all ratings(reviews) given on current product) / ((no. of ratings(reviews) or no. of users given rating to current product) * 5) / 5


cart - user_id + product_id  or  all fields for having same product under same user with diff configs in the cart
order - user_id + order_no + product_id  or  all fields for having same product under same user with diff configs in the order
return -  user_id + order_no + product_id  or  all fields for having same product under same user with diff configs in the return

reviews - user_id + product_id(for 1 user/commnt)(optional)
rating - user_id + product_id(for 1 user/rating)(only option)

product config model - [cart/order/return_id, quantity, size, color, order_status(can be empty in case of product in cart(cart_id)), ]
add to cart - create new doc for cart_id
place order - update cart_id to order_id
return order - create new doc for return_id


https://www.google.com/search?q=combination+of+two+fields+as+unique+in+mongodb&oq=combination+of+two+fields+as+unique+in+mongodb&aqs=chrome..69i57.75740j0j1&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/14692726/unique-constraint-with-two-fields-in-mongodb
https://www.freecodecamp.org/news/the-javascript-array-handbook/




const response
return res()
.lean()
{ body:newUser/updates } = req
for loop in user/product del fn
.find() returns [] not {}
201 - success code for post req

op = [
	{
		order_no: 1,
		products: [{},{}]
	},
	{
		order_no: 2,
		products: [{},{}]
	}
]

chk if applied condn for required/unique field... in all controllers
object destructuring in "findone" only not in "find" bcz it returns array not object

.foreach() -> .some()
res.send({}) or .json({})
db.countDocuments()
need not to use $and when finding using 2 fields -> ',' between two fileds works as $and
object destructuring gives err on null object, sol. -> { x } = obj || {}
object desturcturing does shell copying if variable is object inside the object


JS array fns -> 
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some

._id = gives object not string
nullCount => idCount
.forech() -> for()
